import{_ as i,C as o,c as s,o as d,j as a,G as t,a2 as n,a as c}from"./chunks/framework.HaMb2pZs.js";const v=JSON.parse('{"title":"开发","description":"","frontmatter":{},"headers":[],"relativePath":"develop/vern.md","filePath":"develop/vern.md","lastUpdated":null}'),p={name:"develop/vern.md"};function r(h,e,u,b,m,k){const l=o("ArticleMetadata");return d(),s("div",null,[e[0]||(e[0]=a("h1",{id:"开发",tabindex:"-1"},[c("开发 "),a("a",{class:"header-anchor",href:"#开发","aria-label":'Permalink to "开发"'},"​")],-1)),t(l),e[1]||(e[1]=n('<h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><ul><li><p>安装 <a href="https://visualstudio.microsoft.com/zh-hans/" target="_blank" rel="noreferrer"><span style="border-bottom:2px dashed yellow;">Visual Studio 2022</span></a> 或更高版本。</p></li><li><p>安装 <a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/8.0" target="_blank" rel="noreferrer"><span style="border-bottom:2px dashed yellow;">.NET 8.0 SDK</span></a> 。</p></li><li><p>在 <code>Visual Studio</code> 中使用 <code>NuGet安装器</code> 安装 <code>Hardcodet.NotifyIcon.Wpf</code> 库（用于系统托盘图标）：</p></li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Install-Package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Hardcodet.NotifyIcon.Wpf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>在 <code>Visual Studio</code> 中使用 <code>NuGet安装器</code> 安装 <code>Newtonsoft.Json</code> 库（用于解析 JSON 数据）：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Install-Package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Newtonsoft.Json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="拉取代码" tabindex="-1">拉取代码 <a class="header-anchor" href="#拉取代码" aria-label="Permalink to &quot;拉取代码&quot;">​</a></h2><p>在你想克隆本仓库的位置打开 <code>git bash</code> 输入以下命令</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/MengdeUser/RollCall.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>在 <code>Visual Studio</code> 中打开解决方案 <code>RollCall.sln</code></p></li><li><p>将项目 <code>RollCall_Windows</code> 设置为启动项目</p></li><li><p>点击<code>启动</code>即可编译项目，并开始调试。</p></li></ul><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><ul><li><p><code>App.xaml</code>：应用程序入口。</p></li><li><p><code>Setup.xaml</code>：程序预加载/更新窗口界面。</p></li><li><p><code>MainWindow.xaml</code>：初始化窗口界面。</p></li><li><p><code>Window1.xaml</code>：隐私政策窗口界面。</p></li><li><p><code>Window2.xaml</code>：名单窗口界面。</p></li><li><p><code>Window3.xaml</code>：主窗口/系统托盘图标界面。</p></li><li><p><code>Window4.xaml</code>：点名窗口界面。</p></li></ul><h2 id="其他项目目录" tabindex="-1">其他项目目录 <a class="header-anchor" href="#其他项目目录" aria-label="Permalink to &quot;其他项目目录&quot;">​</a></h2><ul><li><p><code>RollCall_Android</code>：<code>Android Studio</code> 开发的 <code>RollCall</code> 移动端</p></li><li><p><code>RollCall_Setup</code>：<code>Python</code> 开发的 <code>RollCall</code> 检测更新版本</p></li><li><p><code>RollCall_Website</code>：<code>VitePress</code> 开发的 <code>RollCall</code> 帮助文档</p></li></ul>',13))])}const _=i(p,[["render",r]]);export{v as __pageData,_ as default};
